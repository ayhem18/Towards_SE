#main_grid1 {
    min-height: 80vh; 
    min-width: 100%;

    display: grid;

    /*the grid-template-areas property does not seem to assign proportional dimensions*/

    grid-template-areas: "nav nav nav nav nav"
                         "ads1 content content content ads2"
                         "ads1 content content content ads2"
                         "ads1 content content content ads2"
                         "f f f f f";

    /*without these properties, the grid areas will not be as proportional as I want them to*/


    /* grid-template-columns: 20% 20% 20% 20% 20%;
    grid-template-rows: 20% 20% 20% 20% 20%; */

    /*let's try a different layout*/
    /*this is the type of */
    grid-template-columns: 10% 20% 20% 20% 10%;
    grid-template-rows: 10% 25% 25% 25% 10%;

    column-gap: 5%; /*even though the content spans 3 columns, there are still gaps in between the spanned columns but without affecting the content inside the grid area.*/

    /*the default value of grid-template-rows / columns = auto*/

    margin-bottom: 20px;
    border: dotted 2px black;
}



#main_grid > * {
    /*center the text in all children of the main_grid element*/
    text-align: center;
}

.nav_bar {
    grid-area: nav;
    border: solid 1px black;
}

.ads1 {
    grid-area: ads1;
    border: solid 1px green;
}

.ads2 {
    grid-area: ads2;
    border: solid 1px green;
}

.grid_content {
    grid-area: content;
    border: solid 1px red;
}

.grid_footer {
    grid-area: f;
    border: solid 1px blue;
}


/*reproduce the grid layout above differently*/

#main_grid2 {
    min-height: 300px;
    display: grid;

    /*without these properties, the grid areas will not be as proportional as I want them to*/

    /* grid-template-columns: 20% 20% 20% 20% 20%;
    grid-template-rows: 20% 20% 20% 20% 20%; */

    /*let's try a different layout*/
    /*this is the type of */
    grid-template-columns: 5% 30% 30% 30% 5%;
    grid-template-rows: 12% 25% 25% 25% 12%;

    /* column-gap: 2% 0 0 2%; */

    /*the default value of grid-template-rows / columns = auto*/
    margin-bottom: 20px;
    border: dotted 2px black;
}


#main_grid2 > * {
    text-align: right;
}


#nav_bar2 {
    border: solid 1px black;
    grid-column-start: 1;
    grid-column-end: 6;
    grid-row: 1;
}

#ads12 {
    border: solid 1px green;

    grid-column: 1;
    grid-row: 2 / 5;
}

#ads22 {
    border: solid 1px green;
    grid-column: 5;
    grid-row: 2 / 5;

}

#grid_content2 {
    border: solid 1px red;
    grid-column: span 3;
    grid-row: span 3; /*keep in mind that span is highly dependent on the position of the grid-item in html*/
}

#grid_footer2 {
    border: solid 1px blue;
    grid-column: span 5;
}
